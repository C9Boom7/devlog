<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.devlog.mapper.ProjectMapper">

	<!-- 로그인 여부에 따라 공개범위 고려하여 피드에 모든 포스트 반환 -->
	<select id="selectAllProject" resultType="Project">
		select post_project.*,post.seq_blog,post.title,post.regtime,post.disclosure,post.like_count
		from post inner join post_project on post.seq=post_project.seq
		where disclosure=1
		<if test="seq_user != 0">
			or (disclosure=2 and seq_blog in (select seq_user from user_neighbor where seq_neighbor= #{seq_user} ))
			or (seq_blog = #{seq_user})
		</if>
	</select>
	
        
	<!-- 피드에서 내가 이웃 추가한 블로그의 포스트 반환 -->
	<select id="selectAllProjectByNeighbor" resultType="Project">
	    select post_project.*,post.seq_blog,post.title,post.regtime,post.disclosure,post.like_count
		from post inner join post_project on post.seq=post_project.seq
	    where seq_blog in (select seq_neighbor from user_neighbor where seq_user = #{seq_user} )
	    and
	    ( disclosure=1 or (disclosure=2 and seq_blog in (select seq_user from user_neighbor where seq_neighbor= #{seq_user})))
	</select>


	<!-- 피드에서 선택한 태그가 들어간 포스트 반환 -->
	<select id="selectAllProjectByTag" parameterType="java.util.List" resultType="Project">
		select post_project.*,post.seq_blog,post.title,post.regtime,post.disclosure,post.like_count
		from post inner join post_project on post.seq=post_project.seq
		where post.seq in ( 
		select seq_post from post_tag where tag in
		<foreach collection="tag" item="item"  open="(" close=")" separator=",">
            #{item}
        </foreach>
        ) and disclosure=1
		<if test="seq_user != 0">
			or (disclosure=2 and seq_blog in (select seq_user from user_neighbor where seq_neighbor= #{seq_user} ))
			or (seq_blog = #{seq_user})
		</if>
        
	</select>
	
	
	<!-- 블로그 메인에서 모든 프로젝트 반환 -->
	<select id="selectAllProjectByBlog" resultType="Project">
		select post_project.*,post.seq_blog,post.title,post.regtime,post.disclosure,post.like_count
		from post inner join post_project on post.seq=post_project.seq
		where seq_blog = #{seq_blog}
		<if test="seq_user != 0">
		    and (disclosure=1 
			or (disclosure=2 and seq_blog in (select seq_user from user_neighbor where seq_neighbor= #{seq_user} ))
			or (seq_blog = #{seq_user}))
		</if>
		<if test="seq_user == 0">
		 	and disclosure=1 
		</if>
	</select>
	
	<!-- 블로그 메인에서 선택한 태그가 들어간 프로젝트 반환 -->
	<select id="selectAllProjectByBlogByTag" parameterType="java.util.List" resultType="Project">
		select post_project.*,post.seq_blog,post.title,post.regtime,post.disclosure,post.like_count
		from post inner join post_project on post.seq=post_project.seq
		where seq_blog = #{seq_blog} and seq in ( 
		select seq_post from post_tag where tag in 
       <foreach collection="tag" item="item"  open="(" close=")" separator=",">
            #{item}
        </foreach>
		)
		<if test="seq_user != 0">
		    and (disclosure=1 
			or (disclosure=2 and seq_blog in (select seq_user from user_neighbor where seq_neighbor= #{seq_user} ))
			or (seq_blog = #{seq_user}))
		</if>
		<if test="seq_user == 0">
		 	and disclosure=1 
		</if>
	</select>
	
	<!-- 프로젝트 상세조회  -->
	<select id="selectProject" resultType="Project">
		select post_project.*,post.seq_blog,post.title,post.regtime,post.disclosure,post.like_count
		from post inner join post_project on post.seq=post_project.seq
		where post.seq = #{seq}
	</select>
	
	<!-- 프로젝트 기본 정보 등록 -->
	<insert id="insertPost" useGeneratedKeys="true" keyProperty="seq">
		insert into post(
			seq_blog,title,disclosure,like_count
		) values (
			#{seq_blog}, #{title}, #{disclosure} ,0
		)
	</insert>
	
	<!-- 프로젝트 내용 등록 -->
	<insert id="insertPostProject">
		insert into post_project(
			seq,summary,start_date,finish_date,role,github_url,etc_url,rep_url,content
		) values (
			#{seq}, #{summary}, #{start_date}, #{finish_date}, #{role}, #{github_url}, #{etc_url}, #{rep_url}, #{content}
		)
	</insert>
	
	<!-- 프로젝트 기본 정보 수정 -->
	<update id="updatePost">
		update post 
		   set title = #{title}, 
		   	   disclosure = #{disclosure}
		 where seq = #{seq}
	</update>
		
	<!-- 프로젝트 내용 수정 -->
	<update id="updatePostProject">
		update post_project 
		   set summary = #{summary}, start_date = #{start_date}, finish_date = #{finish_date}, role = #{role}, 
		   github_url = #{github_url}, etc_url = #{etc_url}, rep_url = #{rep_url}, content = #{content}
		 where seq = #{seq}
	</update>
	
	<!-- 프로젝트 삭제 -->
	<delete id="deleteProject">
		delete from post where seq = #{seq}
	</delete>
	
</mapper>

